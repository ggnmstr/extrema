diff --git a/src/backend/postmaster/postmaster.c b/src/backend/postmaster/postmaster.c
index bf0241aed0..4aad9db4a5 100644
--- a/src/backend/postmaster/postmaster.c
+++ b/src/backend/postmaster/postmaster.c
@@ -482,6 +482,8 @@ int			postmaster_alive_fds[2] = {-1, -1};
 HANDLE		PostmasterHandle;
 #endif
 
+RegisteredBgWorker_hook_type RegisteredBgWorker_hook = NULL;
+
 /*
  * Postmaster main entry point
  */
@@ -4289,6 +4291,12 @@ do_start_bgworker(RegisteredBgWorker *rw)
 	ReportBackgroundWorkerPID(rw);
 	/* add new worker to lists of backends */
 	dlist_push_head(&BackendList, &rw->rw_backend->elem);
+
+	if (RegisteredBgWorker_hook)
+	{
+		RegisteredBgWorker_hook(rw);
+	}
+
 #ifdef EXEC_BACKEND
 	ShmemBackendArrayAdd(rw->rw_backend);
 #endif
diff --git a/src/include/postmaster/bgworker_internals.h b/src/include/postmaster/bgworker_internals.h
index 9106a0ef3f..541c736450 100644
--- a/src/include/postmaster/bgworker_internals.h
+++ b/src/include/postmaster/bgworker_internals.h
@@ -57,4 +57,8 @@ extern void ResetBackgroundWorkerCrashTimes(void);
 /* Entry point for background worker processes */
 extern void BackgroundWorkerMain(char *startup_data, size_t startup_data_len) pg_attribute_noreturn();
 
+/* added by extrema extension */
+typedef void (*RegisteredBgWorker_hook_type) (RegisteredBgWorker *rw);
+extern PGDLLIMPORT RegisteredBgWorker_hook_type RegisteredBgWorker_hook;
+
 #endif							/* BGWORKER_INTERNALS_H */
